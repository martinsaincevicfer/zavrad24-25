CREATE TABLE Korisnik (
  korisnik_id SERIAL PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  lozinka VARCHAR(255) NOT NULL,
  datum_stvaranja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Uloga (
  uloga_id SERIAL PRIMARY KEY,
  naziv VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE KorisnikUloga (
  korisnik_id INT NOT NULL,
  uloga_id INT NOT NULL,
  PRIMARY KEY (korisnik_id, uloga_id),
  FOREIGN KEY (korisnik_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE,
  FOREIGN KEY (uloga_id) REFERENCES Uloga(uloga_id) ON DELETE CASCADE
);

CREATE TABLE Osoba (
  korisnik_id INT PRIMARY KEY,
  ime VARCHAR(100) NOT NULL,
  prezime VARCHAR(100) NOT NULL,
  adresa TEXT,
  FOREIGN KEY (korisnik_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE
);

CREATE TABLE Tvrtka (
  korisnik_id INT PRIMARY KEY,
  OIB VARCHAR(11) NOT NULL UNIQUE,
  naziv_tvrtke VARCHAR(100) NOT NULL,
  adresa TEXT,
  FOREIGN KEY (korisnik_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE
);

CREATE TABLE Honorarac (
  korisnik_id INT PRIMARY KEY,
  kratki_opis VARCHAR(500),
  edukacija TEXT,
  iskustvo TEXT,
  datum_stvaranja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (korisnik_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE
);

CREATE TABLE Vjestina (
  vjestina_id SERIAL PRIMARY KEY,
  naziv VARCHAR(100) NOT NULL UNIQUE,
  kategorija VARCHAR(100)
);

CREATE TABLE HonoraracVjestina (
  korisnik_id INT NOT NULL,
  vjestina_id INT NOT NULL,
  PRIMARY KEY (korisnik_id, vjestina_id),
  FOREIGN KEY (korisnik_id) REFERENCES Honorarac(korisnik_id) ON DELETE CASCADE,
  FOREIGN KEY (vjestina_id) REFERENCES Vjestina(vjestina_id) ON DELETE CASCADE
);

CREATE TABLE Projekt (
  projekt_id SERIAL PRIMARY KEY,
  naziv VARCHAR(100) NOT NULL,
  opis TEXT,
  budzet NUMERIC(12,2) NOT NULL CHECK (budzet > 0),
  rok DATE NOT NULL,
  datum_stvaranja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  korisnik_id INT NOT NULL,
  FOREIGN KEY (korisnik_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE
);

CREATE TABLE ProjektVjestina (
  vjestina_id INT NOT NULL,
  projekt_id INT NOT NULL,
  PRIMARY KEY (vjestina_id, projekt_id),
  FOREIGN KEY (vjestina_id) REFERENCES Vjestina(vjestina_id) ON DELETE CASCADE,
  FOREIGN KEY (projekt_id) REFERENCES Projekt(projekt_id) ON DELETE CASCADE
);

CREATE TABLE Prijava (
  prijava_id SERIAL PRIMARY KEY,
  status VARCHAR(20) NOT NULL DEFAULT 'aktivna',
  iznos NUMERIC(12,2) NOT NULL CHECK (iznos >= 0),
  poruka TEXT,
  datum_stvaranja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  projekt_id INT NOT NULL,
  korisnik_id INT NOT NULL,
  CHECK (status IN ('aktivna', 'prihvaćena', 'odbijena', 'povučena')),
  FOREIGN KEY (projekt_id) REFERENCES Projekt(projekt_id) ON DELETE CASCADE,
  FOREIGN KEY (korisnik_id) REFERENCES Honorarac(korisnik_id) ON DELETE CASCADE
);

CREATE TABLE Ugovor (
  ugovor_id SERIAL PRIMARY KEY,
  status VARCHAR(20) NOT NULL CHECK (status IN ('aktivan', 'zavrsen', 'otkazan')),
  datum_pocetka DATE NOT NULL,
  datum_zavrsetka DATE CHECK (datum_zavrsetka >= datum_pocetka),
  prijava_id INT NOT NULL UNIQUE,
  FOREIGN KEY (prijava_id) REFERENCES Prijava(prijava_id) ON DELETE CASCADE
);

CREATE TABLE Recenzija (
  recenzija_id SERIAL PRIMARY KEY,
  ocjena INT NOT NULL CHECK (ocjena BETWEEN 1 AND 5),
  komentar TEXT,
  datum_stvaranja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  ugovor_id INT NOT NULL,
  FOREIGN KEY (ugovor_id) REFERENCES Ugovor(ugovor_id) ON DELETE CASCADE
);

CREATE TABLE Rezultat (
  rezultat_id SERIAL PRIMARY KEY,
  ugovor_id INT NOT NULL,
  naziv VARCHAR(255),
  datoteka_put TEXT NOT NULL,
  datum_uploada TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (ugovor_id) REFERENCES Ugovor(ugovor_id) ON DELETE CASCADE
);

CREATE TABLE Poruka (
  poruka_id SERIAL PRIMARY KEY,
  posiljatelj_id INT NOT NULL,
  primatelj_id INT NOT NULL,
  sadrzaj TEXT NOT NULL,
  procitana BOOLEAN NOT NULL DEFAULT FALSE,
  datum_slanja TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (posiljatelj_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE,
  FOREIGN KEY (primatelj_id) REFERENCES Korisnik(korisnik_id) ON DELETE CASCADE
);



