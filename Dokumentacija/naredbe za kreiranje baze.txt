CREATE TABLE Klijenti (
    klijentId SERIAL PRIMARY KEY,
    ime VARCHAR(50) NOT NULL,
    prezime VARCHAR(50) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    lozinka TEXT NOT NULL,
    datumStvaranja TIMESTAMP DEFAULT NOW()
);

CREATE TABLE Freelanceri (
    freelancerId SERIAL PRIMARY KEY,
    ime VARCHAR(50) NOT NULL,
    prezime VARCHAR(50) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    lozinka TEXT NOT NULL,
    kratki_opis TEXT,
    edukacija TEXT,
    iskustvo TEXT,
    datumStvaranja TIMESTAMP DEFAULT NOW()
);

CREATE TABLE Vjestine (
    vjestinaId SERIAL PRIMARY KEY,
    naziv VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE Projekti (
    projektId SERIAL PRIMARY KEY,
    naziv VARCHAR(255) NOT NULL,
    opis TEXT NOT NULL,
    budzet DECIMAL(10,2) CHECK (budzet >= 0),
    rok DATE NOT NULL,
    datumStvaranja TIMESTAMP DEFAULT NOW(),
    klijentId INT NOT NULL,
    FOREIGN KEY (klijentId) REFERENCES Klijenti(klijentId) ON DELETE CASCADE
);

CREATE TABLE Prijave (
    prijavaId SERIAL PRIMARY KEY,
    iznos DECIMAL(10,2) CHECK (iznos >= 0),
    poruka TEXT NOT NULL,
    datumStvaranja TIMESTAMP DEFAULT NOW(),
    projektId INT NOT NULL,
    freelancerId INT NOT NULL,
    FOREIGN KEY (projektId) REFERENCES Projekti(projektId) ON DELETE CASCADE,
    FOREIGN KEY (freelancerId) REFERENCES Freelanceri(freelancerId) ON DELETE CASCADE,
    UNIQUE (projektId, freelancerId) -- Freelancer mo≈æe poslati samo jednu prijavu na isti projekt
);

CREATE TABLE Ocjene (
    ocjenaId SERIAL PRIMARY KEY,
    ocjena INT CHECK (ocjena BETWEEN 1 AND 5) NOT NULL,
    komentar TEXT,
    datumStvaranja TIMESTAMP DEFAULT NOW()
);

CREATE TABLE Ugovori (
    ugovorId SERIAL PRIMARY KEY,
    status VARCHAR(20) CHECK (status IN ('aktivan', 'zavrsen', 'otkazan')) NOT NULL,
    datumPocetka TIMESTAMP DEFAULT NOW(),
    datumKraja TIMESTAMP,
    projektId INT UNIQUE NOT NULL,
    freelancerId INT NOT NULL,
    ocjenaId INT UNIQUE,
    FOREIGN KEY (projektId) REFERENCES Projekti(projektId) ON DELETE CASCADE,
    FOREIGN KEY (freelancerId) REFERENCES Freelanceri(freelancerId) ON DELETE SET NULL,
    FOREIGN KEY (ocjenaId) REFERENCES Ocjene(ocjenaId) ON DELETE SET NULL
);

CREATE TABLE ImaVjestinu (
    freelancerId INT NOT NULL,
    vjestinaId INT NOT NULL,
    PRIMARY KEY (freelancerId, vjestinaId),
    FOREIGN KEY (freelancerId) REFERENCES Freelanceri(freelancerId) ON DELETE CASCADE,
    FOREIGN KEY (vjestinaId) REFERENCES Vjestine(vjestinaId) ON DELETE CASCADE
);
